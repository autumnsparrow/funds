// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.palmcommerce.server.v29.db;

import com.palmcommerce.server.v29.db.UserBind;
import com.palmcommerce.server.v29.db.UserBindDataOnDemand;
import com.palmcommerce.server.v29.db.UserBindIntegrationTest;
import java.util.List;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

privileged aspect UserBindIntegrationTest_Roo_IntegrationTest {
    
    declare @type: UserBindIntegrationTest: @RunWith(SpringJUnit4ClassRunner.class);
    
    declare @type: UserBindIntegrationTest: @ContextConfiguration(locations = "classpath:/META-INF/spring/applicationContext*.xml");
    
    declare @type: UserBindIntegrationTest: @Transactional;
    
    @Autowired
    UserBindDataOnDemand UserBindIntegrationTest.dod;
    
    @Test
    public void UserBindIntegrationTest.testCountUserBinds() {
        Assert.assertNotNull("Data on demand for 'UserBind' failed to initialize correctly", dod.getRandomUserBind());
        long count = UserBind.countUserBinds();
        Assert.assertTrue("Counter for 'UserBind' incorrectly reported there were no entries", count > 0);
    }
    
    @Test
    public void UserBindIntegrationTest.testFindUserBind() {
        UserBind obj = dod.getRandomUserBind();
        Assert.assertNotNull("Data on demand for 'UserBind' failed to initialize correctly", obj);
        String id = obj.getUserBindId();
        Assert.assertNotNull("Data on demand for 'UserBind' failed to provide an identifier", id);
        obj = UserBind.findUserBind(id);
        Assert.assertNotNull("Find method for 'UserBind' illegally returned null for id '" + id + "'", obj);
        Assert.assertEquals("Find method for 'UserBind' returned the incorrect identifier", id, obj.getUserBindId());
    }
    
    @Test
    public void UserBindIntegrationTest.testFindAllUserBinds() {
        Assert.assertNotNull("Data on demand for 'UserBind' failed to initialize correctly", dod.getRandomUserBind());
        long count = UserBind.countUserBinds();
        Assert.assertTrue("Too expensive to perform a find all test for 'UserBind', as there are " + count + " entries; set the findAllMaximum to exceed this value or set findAll=false on the integration test annotation to disable the test", count < 250);
        List<UserBind> result = UserBind.findAllUserBinds();
        Assert.assertNotNull("Find all method for 'UserBind' illegally returned null", result);
        Assert.assertTrue("Find all method for 'UserBind' failed to return any data", result.size() > 0);
    }
    
    @Test
    public void UserBindIntegrationTest.testFindUserBindEntries() {
        Assert.assertNotNull("Data on demand for 'UserBind' failed to initialize correctly", dod.getRandomUserBind());
        long count = UserBind.countUserBinds();
        if (count > 20) count = 20;
        int firstResult = 0;
        int maxResults = (int) count;
        List<UserBind> result = UserBind.findUserBindEntries(firstResult, maxResults);
        Assert.assertNotNull("Find entries method for 'UserBind' illegally returned null", result);
        Assert.assertEquals("Find entries method for 'UserBind' returned an incorrect number of entries", count, result.size());
    }
    
    @Test
    public void UserBindIntegrationTest.testPersist() {
        Assert.assertNotNull("Data on demand for 'UserBind' failed to initialize correctly", dod.getRandomUserBind());
        UserBind obj = dod.getNewTransientUserBind(Integer.MAX_VALUE);
        Assert.assertNotNull("Data on demand for 'UserBind' failed to provide a new transient entity", obj);
        Assert.assertNull("Expected 'UserBind' identifier to be null", obj.getUserBindId());
        obj.persist();
        obj.flush();
        Assert.assertNotNull("Expected 'UserBind' identifier to no longer be null", obj.getUserBindId());
    }
    
    @Test
    public void UserBindIntegrationTest.testRemove() {
        UserBind obj = dod.getRandomUserBind();
        Assert.assertNotNull("Data on demand for 'UserBind' failed to initialize correctly", obj);
        String id = obj.getUserBindId();
        Assert.assertNotNull("Data on demand for 'UserBind' failed to provide an identifier", id);
        obj = UserBind.findUserBind(id);
        obj.remove();
        obj.flush();
        Assert.assertNull("Failed to remove 'UserBind' with identifier '" + id + "'", UserBind.findUserBind(id));
    }
    
}
