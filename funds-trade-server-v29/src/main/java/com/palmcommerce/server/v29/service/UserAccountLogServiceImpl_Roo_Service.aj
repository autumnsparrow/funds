// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.palmcommerce.server.v29.service;

import com.palmcommerce.server.v29.db.UserAccountLog100;
import com.palmcommerce.server.v29.db.UserAccountLog101;
import com.palmcommerce.server.v29.db.UserAccountLog102;
import com.palmcommerce.server.v29.db.UserAccountLog103;
import com.palmcommerce.server.v29.db.UserAccountLog104;
import com.palmcommerce.server.v29.db.UserAccountLog105;
import com.palmcommerce.server.v29.db.UserAccountLog106;
import com.palmcommerce.server.v29.db.UserAccountLog107;
import com.palmcommerce.server.v29.db.UserAccountLog108;
import com.palmcommerce.server.v29.db.UserAccountLog109;
import com.palmcommerce.server.v29.service.UserAccountLogServiceImpl;
import java.util.List;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect UserAccountLogServiceImpl_Roo_Service {
    
    declare @type: UserAccountLogServiceImpl: @Service;
    
    declare @type: UserAccountLogServiceImpl: @Transactional;
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog106s() {
        return UserAccountLog106.countUserAccountLog106s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog106(UserAccountLog106 userAccountLog106) {
        userAccountLog106.remove();
    }
    
    public UserAccountLog106 UserAccountLogServiceImpl.findUserAccountLog106(String id) {
        return UserAccountLog106.findUserAccountLog106(id);
    }
    
    public List<UserAccountLog106> UserAccountLogServiceImpl.findAllUserAccountLog106s() {
        return UserAccountLog106.findAllUserAccountLog106s();
    }
    
    public List<UserAccountLog106> UserAccountLogServiceImpl.findUserAccountLog106Entries(int firstResult, int maxResults) {
        return UserAccountLog106.findUserAccountLog106Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog106(UserAccountLog106 userAccountLog106) {
        userAccountLog106.persist();
    }
    
    public UserAccountLog106 UserAccountLogServiceImpl.updateUserAccountLog106(UserAccountLog106 userAccountLog106) {
        return userAccountLog106.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog103s() {
        return UserAccountLog103.countUserAccountLog103s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog103(UserAccountLog103 userAccountLog103) {
        userAccountLog103.remove();
    }
    
    public UserAccountLog103 UserAccountLogServiceImpl.findUserAccountLog103(String id) {
        return UserAccountLog103.findUserAccountLog103(id);
    }
    
    public List<UserAccountLog103> UserAccountLogServiceImpl.findAllUserAccountLog103s() {
        return UserAccountLog103.findAllUserAccountLog103s();
    }
    
    public List<UserAccountLog103> UserAccountLogServiceImpl.findUserAccountLog103Entries(int firstResult, int maxResults) {
        return UserAccountLog103.findUserAccountLog103Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog103(UserAccountLog103 userAccountLog103) {
        userAccountLog103.persist();
    }
    
    public UserAccountLog103 UserAccountLogServiceImpl.updateUserAccountLog103(UserAccountLog103 userAccountLog103) {
        return userAccountLog103.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog107s() {
        return UserAccountLog107.countUserAccountLog107s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog107(UserAccountLog107 userAccountLog107) {
        userAccountLog107.remove();
    }
    
    public UserAccountLog107 UserAccountLogServiceImpl.findUserAccountLog107(String id) {
        return UserAccountLog107.findUserAccountLog107(id);
    }
    
    public List<UserAccountLog107> UserAccountLogServiceImpl.findAllUserAccountLog107s() {
        return UserAccountLog107.findAllUserAccountLog107s();
    }
    
    public List<UserAccountLog107> UserAccountLogServiceImpl.findUserAccountLog107Entries(int firstResult, int maxResults) {
        return UserAccountLog107.findUserAccountLog107Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog107(UserAccountLog107 userAccountLog107) {
        userAccountLog107.persist();
    }
    
    public UserAccountLog107 UserAccountLogServiceImpl.updateUserAccountLog107(UserAccountLog107 userAccountLog107) {
        return userAccountLog107.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog100s() {
        return UserAccountLog100.countUserAccountLog100s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog100(UserAccountLog100 userAccountLog100) {
        userAccountLog100.remove();
    }
    
    public UserAccountLog100 UserAccountLogServiceImpl.findUserAccountLog100(String id) {
        return UserAccountLog100.findUserAccountLog100(id);
    }
    
    public List<UserAccountLog100> UserAccountLogServiceImpl.findAllUserAccountLog100s() {
        return UserAccountLog100.findAllUserAccountLog100s();
    }
    
    public List<UserAccountLog100> UserAccountLogServiceImpl.findUserAccountLog100Entries(int firstResult, int maxResults) {
        return UserAccountLog100.findUserAccountLog100Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog100(UserAccountLog100 userAccountLog100) {
        userAccountLog100.persist();
    }
    
    public UserAccountLog100 UserAccountLogServiceImpl.updateUserAccountLog100(UserAccountLog100 userAccountLog100) {
        return userAccountLog100.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog104s() {
        return UserAccountLog104.countUserAccountLog104s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog104(UserAccountLog104 userAccountLog104) {
        userAccountLog104.remove();
    }
    
    public UserAccountLog104 UserAccountLogServiceImpl.findUserAccountLog104(String id) {
        return UserAccountLog104.findUserAccountLog104(id);
    }
    
    public List<UserAccountLog104> UserAccountLogServiceImpl.findAllUserAccountLog104s() {
        return UserAccountLog104.findAllUserAccountLog104s();
    }
    
    public List<UserAccountLog104> UserAccountLogServiceImpl.findUserAccountLog104Entries(int firstResult, int maxResults) {
        return UserAccountLog104.findUserAccountLog104Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog104(UserAccountLog104 userAccountLog104) {
        userAccountLog104.persist();
    }
    
    public UserAccountLog104 UserAccountLogServiceImpl.updateUserAccountLog104(UserAccountLog104 userAccountLog104) {
        return userAccountLog104.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog108s() {
        return UserAccountLog108.countUserAccountLog108s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog108(UserAccountLog108 userAccountLog108) {
        userAccountLog108.remove();
    }
    
    public UserAccountLog108 UserAccountLogServiceImpl.findUserAccountLog108(String id) {
        return UserAccountLog108.findUserAccountLog108(id);
    }
    
    public List<UserAccountLog108> UserAccountLogServiceImpl.findAllUserAccountLog108s() {
        return UserAccountLog108.findAllUserAccountLog108s();
    }
    
    public List<UserAccountLog108> UserAccountLogServiceImpl.findUserAccountLog108Entries(int firstResult, int maxResults) {
        return UserAccountLog108.findUserAccountLog108Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog108(UserAccountLog108 userAccountLog108) {
        userAccountLog108.persist();
    }
    
    public UserAccountLog108 UserAccountLogServiceImpl.updateUserAccountLog108(UserAccountLog108 userAccountLog108) {
        return userAccountLog108.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog109s() {
        return UserAccountLog109.countUserAccountLog109s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog109(UserAccountLog109 userAccountLog109) {
        userAccountLog109.remove();
    }
    
    public UserAccountLog109 UserAccountLogServiceImpl.findUserAccountLog109(String id) {
        return UserAccountLog109.findUserAccountLog109(id);
    }
    
    public List<UserAccountLog109> UserAccountLogServiceImpl.findAllUserAccountLog109s() {
        return UserAccountLog109.findAllUserAccountLog109s();
    }
    
    public List<UserAccountLog109> UserAccountLogServiceImpl.findUserAccountLog109Entries(int firstResult, int maxResults) {
        return UserAccountLog109.findUserAccountLog109Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog109(UserAccountLog109 userAccountLog109) {
        userAccountLog109.persist();
    }
    
    public UserAccountLog109 UserAccountLogServiceImpl.updateUserAccountLog109(UserAccountLog109 userAccountLog109) {
        return userAccountLog109.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog102s() {
        return UserAccountLog102.countUserAccountLog102s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog102(UserAccountLog102 userAccountLog102) {
        userAccountLog102.remove();
    }
    
    public UserAccountLog102 UserAccountLogServiceImpl.findUserAccountLog102(String id) {
        return UserAccountLog102.findUserAccountLog102(id);
    }
    
    public List<UserAccountLog102> UserAccountLogServiceImpl.findAllUserAccountLog102s() {
        return UserAccountLog102.findAllUserAccountLog102s();
    }
    
    public List<UserAccountLog102> UserAccountLogServiceImpl.findUserAccountLog102Entries(int firstResult, int maxResults) {
        return UserAccountLog102.findUserAccountLog102Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog102(UserAccountLog102 userAccountLog102) {
        userAccountLog102.persist();
    }
    
    public UserAccountLog102 UserAccountLogServiceImpl.updateUserAccountLog102(UserAccountLog102 userAccountLog102) {
        return userAccountLog102.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog105s() {
        return UserAccountLog105.countUserAccountLog105s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog105(UserAccountLog105 userAccountLog105) {
        userAccountLog105.remove();
    }
    
    public UserAccountLog105 UserAccountLogServiceImpl.findUserAccountLog105(String id) {
        return UserAccountLog105.findUserAccountLog105(id);
    }
    
    public List<UserAccountLog105> UserAccountLogServiceImpl.findAllUserAccountLog105s() {
        return UserAccountLog105.findAllUserAccountLog105s();
    }
    
    public List<UserAccountLog105> UserAccountLogServiceImpl.findUserAccountLog105Entries(int firstResult, int maxResults) {
        return UserAccountLog105.findUserAccountLog105Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog105(UserAccountLog105 userAccountLog105) {
        userAccountLog105.persist();
    }
    
    public UserAccountLog105 UserAccountLogServiceImpl.updateUserAccountLog105(UserAccountLog105 userAccountLog105) {
        return userAccountLog105.merge();
    }
    
    public long UserAccountLogServiceImpl.countAllUserAccountLog101s() {
        return UserAccountLog101.countUserAccountLog101s();
    }
    
    public void UserAccountLogServiceImpl.deleteUserAccountLog101(UserAccountLog101 userAccountLog101) {
        userAccountLog101.remove();
    }
    
    public UserAccountLog101 UserAccountLogServiceImpl.findUserAccountLog101(String id) {
        return UserAccountLog101.findUserAccountLog101(id);
    }
    
    public List<UserAccountLog101> UserAccountLogServiceImpl.findAllUserAccountLog101s() {
        return UserAccountLog101.findAllUserAccountLog101s();
    }
    
    public List<UserAccountLog101> UserAccountLogServiceImpl.findUserAccountLog101Entries(int firstResult, int maxResults) {
        return UserAccountLog101.findUserAccountLog101Entries(firstResult, maxResults);
    }
    
    public void UserAccountLogServiceImpl.saveUserAccountLog101(UserAccountLog101 userAccountLog101) {
        userAccountLog101.persist();
    }
    
    public UserAccountLog101 UserAccountLogServiceImpl.updateUserAccountLog101(UserAccountLog101 userAccountLog101) {
        return userAccountLog101.merge();
    }
    
}
