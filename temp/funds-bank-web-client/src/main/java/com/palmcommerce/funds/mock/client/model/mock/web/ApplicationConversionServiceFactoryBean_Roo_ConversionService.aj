// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.palmcommerce.funds.mock.client.model.mock.web;

import com.palmcommerce.funds.mock.client.model.Protocol240001;
import com.palmcommerce.funds.mock.client.model.Protocol240002;
import com.palmcommerce.funds.mock.client.model.Protocol240003;
import com.palmcommerce.funds.mock.client.model.Protocol240004;
import com.palmcommerce.funds.mock.client.model.Protocol240005;
import com.palmcommerce.funds.mock.client.model.Protocol25002;
import com.palmcommerce.funds.mock.client.model.ProtocolP25002;
import com.palmcommerce.funds.mock.client.model.mock.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Protocol240001, String> ApplicationConversionServiceFactoryBean.getProtocol240001ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.Protocol240001, java.lang.String>() {
            public String convert(Protocol240001 protocol240001) {
                return new StringBuilder().append(protocol240001.getSerialNumber()).append(' ').append(protocol240001.getTransactionDatetime()).append(' ').append(protocol240001.getSiglen()).append(' ').append(protocol240001.getResponse()).toString();
            }
        };
    }
    
    public Converter<Long, Protocol240001> ApplicationConversionServiceFactoryBean.getIdToProtocol240001Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.Protocol240001>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240001 convert(java.lang.Long id) {
                return Protocol240001.findProtocol240001(id);
            }
        };
    }
    
    public Converter<String, Protocol240001> ApplicationConversionServiceFactoryBean.getStringToProtocol240001Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.Protocol240001>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240001 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Protocol240001.class);
            }
        };
    }
    
    public Converter<Protocol240002, String> ApplicationConversionServiceFactoryBean.getProtocol240002ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.Protocol240002, java.lang.String>() {
            public String convert(Protocol240002 protocol240002) {
                return new StringBuilder().append(protocol240002.getSerialNumber()).append(' ').append(protocol240002.getTransactionDatetime()).append(' ').append(protocol240002.getSiglen()).append(' ').append(protocol240002.getResponse()).toString();
            }
        };
    }
    
    public Converter<Long, Protocol240002> ApplicationConversionServiceFactoryBean.getIdToProtocol240002Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.Protocol240002>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240002 convert(java.lang.Long id) {
                return Protocol240002.findProtocol240002(id);
            }
        };
    }
    
    public Converter<String, Protocol240002> ApplicationConversionServiceFactoryBean.getStringToProtocol240002Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.Protocol240002>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240002 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Protocol240002.class);
            }
        };
    }
    
    public Converter<Protocol240003, String> ApplicationConversionServiceFactoryBean.getProtocol240003ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.Protocol240003, java.lang.String>() {
            public String convert(Protocol240003 protocol240003) {
                return new StringBuilder().append(protocol240003.getSerialNumber()).append(' ').append(protocol240003.getTransactionDatetime()).append(' ').append(protocol240003.getSiglen()).append(' ').append(protocol240003.getResponse()).toString();
            }
        };
    }
    
    public Converter<Long, Protocol240003> ApplicationConversionServiceFactoryBean.getIdToProtocol240003Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.Protocol240003>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240003 convert(java.lang.Long id) {
                return Protocol240003.findProtocol240003(id);
            }
        };
    }
    
    public Converter<String, Protocol240003> ApplicationConversionServiceFactoryBean.getStringToProtocol240003Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.Protocol240003>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240003 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Protocol240003.class);
            }
        };
    }
    
    public Converter<Protocol240004, String> ApplicationConversionServiceFactoryBean.getProtocol240004ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.Protocol240004, java.lang.String>() {
            public String convert(Protocol240004 protocol240004) {
                return new StringBuilder().append(protocol240004.getSerialNumber()).append(' ').append(protocol240004.getTransactionDatetime()).append(' ').append(protocol240004.getSiglen()).append(' ').append(protocol240004.getResponse()).toString();
            }
        };
    }
    
    public Converter<Long, Protocol240004> ApplicationConversionServiceFactoryBean.getIdToProtocol240004Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.Protocol240004>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240004 convert(java.lang.Long id) {
                return Protocol240004.findProtocol240004(id);
            }
        };
    }
    
    public Converter<String, Protocol240004> ApplicationConversionServiceFactoryBean.getStringToProtocol240004Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.Protocol240004>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240004 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Protocol240004.class);
            }
        };
    }
    
    public Converter<Protocol240005, String> ApplicationConversionServiceFactoryBean.getProtocol240005ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.Protocol240005, java.lang.String>() {
            public String convert(Protocol240005 protocol240005) {
                return new StringBuilder().append(protocol240005.getSerialNumber()).append(' ').append(protocol240005.getTransactionDatetime()).append(' ').append(protocol240005.getSiglen()).append(' ').append(protocol240005.getResponse()).toString();
            }
        };
    }
    
    public Converter<Long, Protocol240005> ApplicationConversionServiceFactoryBean.getIdToProtocol240005Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.Protocol240005>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240005 convert(java.lang.Long id) {
                return Protocol240005.findProtocol240005(id);
            }
        };
    }
    
    public Converter<String, Protocol240005> ApplicationConversionServiceFactoryBean.getStringToProtocol240005Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.Protocol240005>() {
            public com.palmcommerce.funds.mock.client.model.Protocol240005 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Protocol240005.class);
            }
        };
    }
    
    public Converter<Protocol25002, String> ApplicationConversionServiceFactoryBean.getProtocol25002ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.Protocol25002, java.lang.String>() {
            public String convert(Protocol25002 protocol25002) {
                return new StringBuilder().append(protocol25002.getSerialNumber()).append(' ').append(protocol25002.getTransactionDatetime()).append(' ').append(protocol25002.getSiglen()).append(' ').append(protocol25002.getResponse()).toString();
            }
        };
    }
    
    public Converter<Long, Protocol25002> ApplicationConversionServiceFactoryBean.getIdToProtocol25002Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.Protocol25002>() {
            public com.palmcommerce.funds.mock.client.model.Protocol25002 convert(java.lang.Long id) {
                return Protocol25002.findProtocol25002(id);
            }
        };
    }
    
    public Converter<String, Protocol25002> ApplicationConversionServiceFactoryBean.getStringToProtocol25002Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.Protocol25002>() {
            public com.palmcommerce.funds.mock.client.model.Protocol25002 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Protocol25002.class);
            }
        };
    }
    
    public Converter<ProtocolP25002, String> ApplicationConversionServiceFactoryBean.getProtocolP25002ToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.palmcommerce.funds.mock.client.model.ProtocolP25002, java.lang.String>() {
            public String convert(ProtocolP25002 protocolP25002) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, ProtocolP25002> ApplicationConversionServiceFactoryBean.getIdToProtocolP25002Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.palmcommerce.funds.mock.client.model.ProtocolP25002>() {
            public com.palmcommerce.funds.mock.client.model.ProtocolP25002 convert(java.lang.Long id) {
                return ProtocolP25002.findProtocolP25002(id);
            }
        };
    }
    
    public Converter<String, ProtocolP25002> ApplicationConversionServiceFactoryBean.getStringToProtocolP25002Converter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.palmcommerce.funds.mock.client.model.ProtocolP25002>() {
            public com.palmcommerce.funds.mock.client.model.ProtocolP25002 convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProtocolP25002.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getProtocol240001ToStringConverter());
        registry.addConverter(getIdToProtocol240001Converter());
        registry.addConverter(getStringToProtocol240001Converter());
        registry.addConverter(getProtocol240002ToStringConverter());
        registry.addConverter(getIdToProtocol240002Converter());
        registry.addConverter(getStringToProtocol240002Converter());
        registry.addConverter(getProtocol240003ToStringConverter());
        registry.addConverter(getIdToProtocol240003Converter());
        registry.addConverter(getStringToProtocol240003Converter());
        registry.addConverter(getProtocol240004ToStringConverter());
        registry.addConverter(getIdToProtocol240004Converter());
        registry.addConverter(getStringToProtocol240004Converter());
        registry.addConverter(getProtocol240005ToStringConverter());
        registry.addConverter(getIdToProtocol240005Converter());
        registry.addConverter(getStringToProtocol240005Converter());
        registry.addConverter(getProtocol25002ToStringConverter());
        registry.addConverter(getIdToProtocol25002Converter());
        registry.addConverter(getStringToProtocol25002Converter());
        registry.addConverter(getProtocolP25002ToStringConverter());
        registry.addConverter(getIdToProtocolP25002Converter());
        registry.addConverter(getStringToProtocolP25002Converter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
